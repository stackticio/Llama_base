---
apiVersion: batch/v1
kind: Job
metadata:
  name: flowise-verify
  namespace: build
  labels:
    opa-exempt: "true" 
spec:
  backoffLimit: 0
  template:
    spec:
      # IMPORTANT: Use the SA with appropriate permissions
      serviceAccountName: cosign-verify-job-sa-flowise
      restartPolicy: Never

      containers:
        - name: cosign-verify
          image: stacktic/cosign:v3
          command:
            - "/bin/sh"
            - "-c"
            - |
              set -e

              echo "Reading Cosign password from secret..."
              COSIGN_PASSWORD=$(cat /etc/cosign/password)
              export COSIGN_PASSWORD

              # Use registry credentials for Cosign
              export DOCKER_CONFIG=/kaniko/.docker

              echo "Verifying signature..."
              cosign verify --key /etc/cosign/cosign.pub \
                index.docker.io/project/flowise:v1.2

              echo "Signature verification complete."

              echo "Waiting for deployment 'flowise' in namespace 'flowise' to become ready..."

              DEPLOYMENT_TIMEOUT=300  # 5 minutes
              if ! kubectl rollout status deployment/flowise \
                  -n flowise \
                  --timeout=${DEPLOYMENT_TIMEOUT}s; then
                echo "ERROR: Deployment did not complete within the timeout period."
                exit 1
              fi

              echo "Deployment is ready. Searching for the application pod..."

              TIMEOUT=300  # 5 minutes
              INTERVAL=5
              ELAPSED=0
              APP_POD=$(kubectl get pods -n flowise \
                -l app.kubernetes.io/name=flowise \
                -o jsonpath='{.items[0].metadata.name}' 2>/dev/null || true)

              while [[ -z "$APP_POD" && $ELAPSED -lt $TIMEOUT ]]; do
                echo "Waiting for application pod to be created... ($ELAPSED seconds elapsed)"
                sleep $INTERVAL
                ELAPSED=$((ELAPSED + INTERVAL))
                APP_POD=$(kubectl get pods -n flowise \
                  -l app.kubernetes.io/name=flowise \
                  -o jsonpath='{.items[0].metadata.name}' 2>/dev/null || true)
              done

              if [[ -z "$APP_POD" ]]; then
                echo "ERROR: Timeout waiting for application pod in flowise"
                exit 1
              fi

              echo "Application pod found: $APP_POD"
              echo "Annotating the application pod to mark the image as signed..."

              kubectl annotate pod "$APP_POD" \
                stacktic.io/imageSigned=true \
                --overwrite \
                -n flowise

              echo "Pod annotated successfully."

          volumeMounts:
            - name: cosign-key
              mountPath: /etc/cosign
              readOnly: true
            - name: kaniko-secret
              mountPath: /kaniko/.docker
              readOnly: true

      volumes:
        - name: cosign-key
          secret:
            secretName: flowise-cosign-key-secret
            items:
              - key: cosign.key
                path: cosign.key
              - key: cosign.pub
                path: cosign.pub
              - key: password
                path: password

        - name: kaniko-secret
          secret:
            secretName: registry-credential
            items:
              - key: .dockerconfigjson
                path: config.json
